- name: Update - Ubuntu
  ansible.builtin.apt:
    update_cache: true
    upgrade: dist
  when: ansible_facts['os_family'] == "Debian"

- name: Install required packages
  ansible.builtin.apt:
    name: "{{ debian_packages }}"
    state: present
  when: ansible_facts['os_family'] == "Debian"

- name: Update - Rocky
  ansible.builtin.dnf:
    update_cache: true
    name: "*"
    state: latest
  when: ansible_facts['os_family'] == "RedHat"

- name: Install deps - Rocky
  ansible.builtin.dnf:
    name: "{{ rh_packages }}"
    state: present
  when: ansible_facts['os_family'] == "RedHat"

- name: Remove default Apache index.html
  ansible.builtin.file:
    path: "{{ wp_dir }}/index.html"
    state: absent

- name: Ensure Apache is started
  ansible.builtin.command: echo "Starting apache"
  notify:
    - Restart apache - Ubuntu
    - Restart apache - Rocky

- name: Copy setup script
  ansible.builtin.template:
    src: setup-mariadb.sh.j2
    dest: /root/setup-mariadb.sh
    mode: "0755"

- name: Setup MariaDB
  ansible.builtin.shell: /root/setup-mariadb.sh

- name: Download WordPress
  ansible.builtin.get_url:
    url: "{{ wp_url }}"
    dest: /tmp/latest.zip
    mode: "0744"

- name: Unzip WordPress
  ansible.builtin.unarchive:
    src: /tmp/latest.zip
    dest: "{{ wp_dir }}"
    remote_src: true

- name: Set permissions for WordPress files
  ansible.builtin.file:
    path: "{{ wp_dir }}"
    owner: www-data
    group: www-data
    recurse: true
    mode: '0755'

- name: Copy wp-config.php
  ansible.builtin.copy:
    src: "{{ wp_dir }}/wp-config-sample.php"
    dest: "{{ wp_dir }}/wp-config.php"
    remote_src: true
    mode: "0744"

- name: Update wp-config.php for DB name
  ansible.builtin.lineinfile:
    path: "{{ wp_dir }}/wp-config.php"
    regexp: '^define\(''DB_NAME'',.*'
    line: "define('DB_NAME', '{{ db_name }}');"

- name: Update wp-config.php for DB user
  ansible.builtin.lineinfile:
    path: "{{ wp_dir }}/wp-config.php"
    regexp: '^define\(''DB_USER'',.*'
    line: "define('DB_USER', '{{ db_user }}');"

- name: Update wp-config.php for DB password
  ansible.builtin.lineinfile:
    path: "{{ wp_dir }}/wp-config.php"
    regexp: '^define\(''DB_PASSWORD'',.*'
    line: "define('DB_PASSWORD', '{{ db_user_password }}');"

- name: Update wp-config.php for DB host
  ansible.builtin.lineinfile:
    path: "{{ wp_dir }}/wp-config.php"
    regexp: '^define\(''DB_HOST'',.*'
    line: "define('DB_HOST', 'localhost');"

- name: Set permissions for wp-config.php
  ansible.builtin.file:
    path: "{{ wp_dir }}/wp-config.php"
    owner: www-data
    group: www-data
    mode: '0640'

- name: Configure Apache for WordPress
  ansible.builtin.copy:
    dest: "{{ apache_conf }}"
    content: |
    mode: "0744"

- name: Enable WordPress site
  ansible.builtin.command: a2ensite wordpress.conf
  notify:
    - Restart apache - Ubuntu
    - Restart apache - Rocky

- name: Enable Apache rewrite module
  ansible.builtin.command: a2enmod rewrite
  notify:
    - Restart apache - Ubuntu
    - Restart apache - Rocky
